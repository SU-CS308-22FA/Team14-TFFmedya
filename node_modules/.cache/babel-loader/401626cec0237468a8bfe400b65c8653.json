{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alp\\\\Desktop\\\\CS_308\\\\Deneme\\\\tffmedya\\\\src\\\\Poll.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { LeafPoll, Result } from 'react-leaf-polls';\nimport 'react-leaf-polls/dist/index.css';\nimport Poll from 'react-polls';\nimport { Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PollPage() {\n  _s();\n  const [errorMessage, setErrorMessage] = useState('');\n  const Navigate = useNavigate();\n\n  /*\r\n  const pollQuestion = 'Is react-polls useful?'\r\n  const pollAnswers = [\r\n    { option: 'Yes', votes: 6 },\r\n    { option: 'No', votes: 2 }\r\n  ]\r\n  \r\n  /*\r\n  const handleVote = voteAnswer => {\r\n      const { pollAnswers } = this.state\r\n      const newPollAnswers = pollAnswers.map(answer => {\r\n        if (answer.option === voteAnswer) answer.votes++\r\n        return answer\r\n      })\r\n      this.setState({\r\n        pollAnswers: newPollAnswers\r\n      })\r\n  }*/\n\n  const [inputList, setinputList] = useState([{\n    lastName: ''\n  }]);\n  const handleinputchange = (e, index) => {\n    const {\n      value\n    } = e.target;\n    const list = [...inputList];\n    list[index] = value;\n    setinputList(list);\n  };\n  const handleremove = index => {\n    const list = [...inputList];\n    list.splice(index, 1);\n    setinputList(list);\n  };\n  const handleaddclick = () => {\n    console.log(inputList);\n    setinputList([...inputList, {\n      lastName: ''\n    }]);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    Navigate(\"/\");\n    //console.log(email );\n    //console.log(pass);\n\n    /*\r\n    fetch('http://127.0.0.1:8000/userlogin', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          // Add parameters here\r\n          'Title' : title,\r\n          'Subject' : subject\r\n        }),\r\n        headers: {\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n      })\r\n         .then((response) => response.json())\r\n         .then((data) => {\r\n            console.log(data);\r\n            if (data !== \"There is no user with this email.\") {\r\n                  Navigate(\"/profile\", { state: data })\r\n            }\r\n            else {\r\n               \r\n                setErrorMessage(\"Mail veya şifre bilginiz hatalı!\")\r\n              }\r\n           })\r\n         .catch((err) => {\r\n            console.log(err.message);\r\n         })*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group col-md-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter your poll question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"firstName\",\n            class: \"form-control\",\n            placeholder: \"Poll question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), inputList.map((x, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Add the first option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 16\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"lastName\",\n                class: \"form-control\",\n                placeholder: \"Option 1\",\n                onChange: e => handleinputchange(e, i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group col-md-2 mt-4\",\n              children: [inputList.length !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger mx-1\",\n                onClick: () => handleremove(i),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this), inputList.length - 1 === i && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                onClick: handleaddclick,\n                children: \"Add More\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this)\n  /*\r\n  //<div className=\"col-md-5\">\r\n    //<div className=\"form-area\">  \r\n        <form role=\"form\" onSubmit={handleSubmit}>\r\n        <br styles=\"clear:both\" />\r\n          <div className=\"form\">\r\n            <h2>Create polls</h2>\r\n            <input type=\"text\" className=\"form-control\" id=\"title\" name=\"title\" placeholder=\"Title\" required />\r\n          </div>\r\n                      \r\n          <div className=\"form\">\r\n          <input type=\"text\" className=\"form-control\" id=\"question\" name=\"question\" placeholder=\"Your poll question\" required />\r\n          </div>\r\n             \r\n        <button type=\"submit\" id=\"submit\" name=\"submit\" className=\"btn btn-primary pull-right\">Add Post</button>\r\n        </form>\r\n      //</div>\r\n  //</div>\r\n  /*<div>\r\n  <Poll question={pollQuestion} answers={pollAnswers} onVote={handleVote} />\r\n  </div>*/;\n}\n_s(PollPage, \"WZq7gF8vGEKy5BUbwPxxHh6pJ+M=\", false, function () {\n  return [useNavigate];\n});\n_c = PollPage;\nvar _c;\n$RefreshReg$(_c, \"PollPage\");","map":{"version":3,"names":["React","useState","Link","useNavigate","LeafPoll","Result","Poll","Container","PollPage","errorMessage","setErrorMessage","Navigate","inputList","setinputList","lastName","handleinputchange","e","index","value","target","list","handleremove","splice","handleaddclick","console","log","handleSubmit","preventDefault","map","x","i","length"],"sources":["C:/Users/Alp/Desktop/CS_308/Deneme/tffmedya/src/Poll.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Link, useNavigate  } from 'react-router-dom'\r\nimport { LeafPoll, Result } from 'react-leaf-polls'\r\nimport 'react-leaf-polls/dist/index.css'\r\nimport Poll from 'react-polls';\r\nimport { Container } from \"react-bootstrap\";\r\n\r\n\r\n\r\nexport default function PollPage () {\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const Navigate = useNavigate()\r\n\r\n    /*\r\n    const pollQuestion = 'Is react-polls useful?'\r\n    const pollAnswers = [\r\n      { option: 'Yes', votes: 6 },\r\n      { option: 'No', votes: 2 }\r\n    ]\r\n    \r\n    /*\r\n    const handleVote = voteAnswer => {\r\n        const { pollAnswers } = this.state\r\n        const newPollAnswers = pollAnswers.map(answer => {\r\n          if (answer.option === voteAnswer) answer.votes++\r\n          return answer\r\n        })\r\n        this.setState({\r\n          pollAnswers: newPollAnswers\r\n        })\r\n    }*/\r\n\r\n      const [inputList, setinputList]= useState([{ lastName:''}]);\r\n    \r\n      const handleinputchange=(e, index)=>{\r\n        const {value}= e.target;\r\n        const list= [...inputList];\r\n        list[index]= value;\r\n        setinputList(list);\r\n    \r\n      }\r\n     \r\n      const handleremove= index=>{\r\n        const list=[...inputList];\r\n        list.splice(index,1);\r\n        setinputList(list);\r\n      }\r\n    \r\n      const handleaddclick=()=>{ \r\n        console.log(inputList);\r\n        setinputList([...inputList, { lastName:''}]);\r\n      }\r\n\r\n    \r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        Navigate(\"/\");\r\n        //console.log(email );\r\n        //console.log(pass);\r\n\r\n        /*\r\n        fetch('http://127.0.0.1:8000/userlogin', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n              // Add parameters here\r\n              'Title' : title,\r\n              'Subject' : subject\r\n            }),\r\n            headers: {\r\n              'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n          })\r\n             .then((response) => response.json())\r\n             .then((data) => {\r\n                console.log(data);\r\n                if (data !== \"There is no user with this email.\") {\r\n\r\n                    Navigate(\"/profile\", { state: data })\r\n                }\r\n                else {\r\n                   \r\n                    setErrorMessage(\"Mail veya şifre bilginiz hatalı!\")\r\n\r\n                }\r\n\r\n             })\r\n             .catch((err) => {\r\n                console.log(err.message);\r\n             })*/\r\n\r\n    }\r\n\r\n    \r\n    return (\r\n\r\n\r\n    <Container className=\"content\">\r\n     <div className=\"row\">\r\n       <div className=\"col-sm-12\">   \r\n          <div class=\"form-group col-md-4\">\r\n            <label >Enter your poll question</label>\r\n            <input type=\"text\"  name=\"firstName\" class=\"form-control\"  placeholder=\"Poll question\"  />\r\n          </div>\r\n\r\n            { \r\n            inputList.map( (x,i)=>{\r\n              return(\r\n              <div className=\"row mb-3\">\r\n                 \r\n               <div class=\"form-group col-md-4\">\r\n               <label >Add the first option</label>\r\n                  <input type=\"text\"  name=\"lastName\" class=\"form-control\"   placeholder=\"Option 1\" onChange={ e=>handleinputchange(e,i) }/>\r\n               </div>\r\n               <div class=\"form-group col-md-2 mt-4\">\r\n               {\r\n                  inputList.length!==1 &&\r\n                  <button  className=\"btn btn-danger mx-1\" onClick={()=> handleremove(i)}>Remove</button>\r\n               }\r\n               { inputList.length-1===i &&\r\n                  <button  className=\"btn btn-success\" onClick={ handleaddclick}>Add More</button>\r\n               }\r\n               </div>\r\n            </div>\r\n              );\r\n             } )} \r\n\r\n               \r\n       </div>\r\n     </div>\r\n    </Container>\r\n        /*\r\n        //<div className=\"col-md-5\">\r\n          //<div className=\"form-area\">  \r\n              <form role=\"form\" onSubmit={handleSubmit}>\r\n              <br styles=\"clear:both\" />\r\n                <div className=\"form\">\r\n                  <h2>Create polls</h2>\r\n                  <input type=\"text\" className=\"form-control\" id=\"title\" name=\"title\" placeholder=\"Title\" required />\r\n                </div>\r\n                            \r\n                <div className=\"form\">\r\n                <input type=\"text\" className=\"form-control\" id=\"question\" name=\"question\" placeholder=\"Your poll question\" required />\r\n                </div>\r\n                   \r\n              <button type=\"submit\" id=\"submit\" name=\"submit\" className=\"btn btn-primary pull-right\">Add Post</button>\r\n              </form>\r\n\r\n          //</div>\r\n        //</div>\r\n        /*<div>\r\n        <Poll question={pollQuestion} answers={pollAnswers} onVote={handleVote} />\r\n        </div>*/\r\n\r\n \r\n        \r\n       \r\n    \r\n           \r\n         \r\n       \r\n           \r\n    )   \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}